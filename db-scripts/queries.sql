/*----------------------- [[ QUERIES (1 - 10) ----------------------------]]*/

/*------------------------[#1]*/

SELECT STUDENT_ID, CNIC, F_NAME||' '||L_NAME, DOB, GENDER, CLASS_ID, SECTION_ID, FAMILY_ID, GUARDIAN_ID, RELATION, CHALLAN_ID, ADMIT_DATE, LAST_UPDATE_DATE 
FROM STUDENT 
ORDER BY STUDENT_ID;


/*------------------------[#2]*/
SELECT F.FATHER_ID, P2.CNIC, PS2.F_NAME, PS2.L_NAME, PS2.CONTACT_NO, F.MOTHER_ID, P1.CNIC, PS1.F_NAME, PS1.L_NAME, PS1.CONTACT_NO
FROM FAMILY F
INNER JOIN PARENT P1 ON F.MOTHER_ID = P1.PARENT_ID
INNER JOIN PERSON PS1 ON PS1.CNIC = P1.CNIC
INNER JOIN PARENT P2 ON F.FATHER_ID = P2.PARENT_ID
INNER JOIN PERSON PS2 ON PS2.CNIC = P2.CNIC;


/*------------------------[#3]*/

SELECT G.GUARDIAN_ID, G.CNIC, G.F_NAME||' '||G.L_NAME AS G_NAME, G.CONTACT_NO, G.GENDER, S.RELATION AS RELATIONSHIP, S.STUDENT_ID, S.F_NAME||' '||S.L_NAME AS S_NAME
FROM STUDENT S
INNER JOIN GUARDIAN G ON S.GUARDIAN_ID = G.GUARDIAN_ID
ORDER BY RELATION, G.GUARDIAN_ID;


/*------------------------[#4]*/

SELECT F.FAMILY_ID, F.FATHER_ID, P2.CNIC, PS2.F_NAME||' '||PS2.L_NAME AS FATHER_NAME, PS2.CONTACT_NO, F.MOTHER_ID, P1.CNIC, PS1.F_NAME||' '||PS1.L_NAME AS MOTHER_NAME, PS1.CONTACT_NO, S.STUDENT_ID, S.F_NAME||' '||S.L_NAME AS S_NAME
FROM FAMILY F
INNER JOIN PARENT P1 ON F.MOTHER_ID = P1.PARENT_ID
INNER JOIN PERSON PS1 ON PS1.CNIC = P1.CNIC
INNER JOIN PARENT P2 ON F.FATHER_ID = P2.PARENT_ID
INNER JOIN PERSON PS2 ON PS2.CNIC = P2.CNIC
INNER JOIN STUDENT S ON F.FAMILY_ID = S.FAMILY_ID
ORDER BY FAMILY_ID;


/*------------------------[#5]*/

SELECT * FROM STUDENT S1
WHERE (SELECT COUNT(*) FROM STUDENT S2 GROUP BY S2.FAMILY_ID HAVING S1.FAMILY_ID = S2.FAMILY_ID) > 1
ORDER BY CLASS_ID, SECTION_ID;


/*------------------------[#6]*/

/*
USE H.NEW_ADMIT_OR_CLASS_CHANGE > 0 - FOR INCLUDING NEW ADMISSIONS
USE H.NEW_ADMIT_OR_CLASS_CHANGE > 1 - FOR EXCLUDING NEW ADMISSIONS
*/

SELECT S.STUDENT_ID, S.CNIC, S.DOB, S.F_NAME||' '||S.L_NAME, S.CLASS_ID, S.SECTION_ID AS NAME FROM STUDENT_HISTORY H
INNER JOIN STUDENT S ON H.STUDENT_ID = S.STUDENT_ID
WHERE H.NEW_ADMIT_OR_CLASS_CHANGE > 0 AND H.LAST_UPDATE_DATE BETWEEN TO_DATE('27/5/2019','DD/MM/YYYY') AND TO_DATE('29/6/2020', 'DD/MM/YYYY');


/*------------------------[#7]*/

SELECT * FROM STUDENT
WHERE ADMIT_DATE BETWEEN TO_DATE('12/5/2020','DD/MM/YYYY') AND TO_DATE('29/5/2020', 'DD/MM/YYYY')
ORDER BY CLASS_ID, SECTION_ID;


/*------------------------[#8]*/

SELECT F.FAMILY_ID, F.FATHER_ID, P2.CNIC, PS2.F_NAME, PS2.L_NAME, PS2.CONTACT_NO, F.MOTHER_ID, P1.CNIC, PS1.F_NAME, PS1.L_NAME, PS1.CONTACT_NO, S.STUDENT_ID, S.F_NAME||' '||S.L_NAME AS S_NAME
FROM FAMILY F
INNER JOIN PARENT P1 ON F.MOTHER_ID = P1.PARENT_ID
INNER JOIN PERSON PS1 ON PS1.CNIC = P1.CNIC
INNER JOIN PARENT P2 ON F.FATHER_ID = P2.PARENT_ID
INNER JOIN PERSON PS2 ON PS2.CNIC = P2.CNIC
INNER JOIN STUDENT S ON F.FAMILY_ID = S.FAMILY_ID
WHERE F.JOIN_DATE BETWEEN TO_DATE('1/4/2016','DD/MM/YYYY') AND TO_DATE('29/10/2020', 'DD/MM/YYYY')
ORDER BY FAMILY_ID, STUDENT_ID;


/*------------------------[#9]*/

SELECT F.FATHER_ID, P2.CNIC, PS2.F_NAME, PS2.L_NAME, PS2.CONTACT_NO, F.MOTHER_ID, P1.CNIC, PS1.F_NAME, PS1.L_NAME, PS1.CONTACT_NO
FROM FAMILY F
INNER JOIN PARENT P1 ON F.MOTHER_ID = P1.PARENT_ID
INNER JOIN PERSON PS1 ON PS1.CNIC = P1.CNIC
INNER JOIN PARENT P2 ON F.FATHER_ID = P2.PARENT_ID
INNER JOIN PERSON PS2 ON PS2.CNIC = P2.CNIC
WHERE F.EARLY_INTRODUCER = 1
ORDER BY F.FAMILY_ID;


/*------------------------[#10]*/


/*
IN WHERE CONDITION (NEW_ADMIT_OR_CLASS_CHANGE):
AGAIN.. > 0 - INCLUDING NEW ADMISSIONS
        > 1 - EXCLUDING NEW ADMISSIONS
*/

SELECT STUDENT_ID, F_NAME||' '||L_NAME AS NAME, CLASS_ID, SECTION_ID
FROM STUDENT_HISTORY
WHERE NEW_ADMIT_OR_CLASS_CHANGE > 1
ORDER BY STUDENT_ID, CLASS_ID, SECTION_ID;




/*-------------------------[#11]*/

/*GET SORTED LIST OF ALL SECTIONS*/
SELECT S.CLASS_ID, S.TITLE, S.SECTION_ID 
FROM SECTION S 
INNER JOIN CLASS C ON C.CLASS_ID = S.CLASS_ID 
ORDER BY S.CLASS_ID, S.SECTION_ID

/*USE THIS INSIDE LOOP TO GET LIST OF STUDENTS IN A PARTICULAR SECTION*/
SELECT STUDENT_ID, F_NAME||' '||L_NAME AS NAME, ROUND(MONTHS_BETWEEN(SYSDATE, DOB)/12,1) AS AGE, GENDER 
FROM STUDENT 
WHERE CLASS_ID = ".$row['CLASS_ID']." AND SECTION_ID = '".$row['SECTION_ID']."';

/*ADD STUDENT - HAVE TO INSERT PARENT, FAMILY, GUARDIAN STUDENT - CODE IN .PHP FILE*/

/*DELETE STUDENT*/
DELETE FROM STUDENT WHERE STUDENT_ID = {$_GET['id']}


/*-------------------------[#12]*/

SELECT S.CLASS_ID, S.SECTION_ID, S.TITLE, COUNT(STM.STUDENT_ID) AS NUM_MALE_STUDENT, COUNT(STF.STUDENT_ID) AS NUM_FEMALE_STUDENT, COUNT(STM.STUDENT_ID) + COUNT(STF.STUDENT_ID) TOTAL_NUM
FROM STUDENT ST
LEFT JOIN STUDENT STM ON ST.STUDENT_ID = STM.STUDENT_ID AND STM.GENDER = 'M'
LEFT JOIN STUDENT STF ON ST.STUDENT_ID = STF.STUDENT_ID AND STF.GENDER = 'F'
RIGHT JOIN SECTION S ON ST.CLASS_ID = S.CLASS_ID AND ST.SECTION_ID = S.SECTION_ID
GROUP BY S.CLASS_ID, S.SECTION_ID, S.TITLE
ORDER BY S.CLASS_ID, S.SECTION_ID;


/*-------------------------[#13]*/

SELECT STUDENT_ID, F_NAME||' '||L_NAME AS S_NAME, TO_CHAR(DOB, 'DD/MM/YYYY') AS DOB, CNIC, CLASS_ID, SECTION_ID, LAST_UPDATE_DATE
FROM STUDENT ST WHERE ADD_MONTHS(SYSDATE,-5) > ST.LAST_UPDATE_DATE;

SELECT STUDENT_ID, F_NAME||' '||L_NAME AS S_NAME, TO_CHAR(DOB, 'DD/MM/YYYY') AS DOB, CNIC, CLASS_ID, SECTION_ID, LAST_UPDATE_DATE
FROM STUDENT ST 
WHERE ADD_MONTHS(SYSDATE, (-12 * 2 ) ) > ST.LAST_UPDATE_DATE;


/*-------------------------[#14]*/


/*PARENTS*/
SELECT P2.CNIC CNIC, PS2.F_NAME||' '||PS2.L_NAME AS NAME, PS2.CONTACT_NO, P1.CNIC, PS1.F_NAME||' '||PS1.L_NAME AS NAME, PS1.CONTACT_NO
FROM FAMILY F
INNER JOIN PARENT P1 ON F.MOTHER_ID = P1.PARENT_ID
INNER JOIN PERSON PS1 ON PS1.CNIC = P1.CNIC
INNER JOIN PARENT P2 ON F.FATHER_ID = P2.PARENT_ID
INNER JOIN PERSON PS2 ON PS2.CNIC = P2.CNIC
WHERE F.FAMILY_ID = (SELECT FAMILY_ID FROM STUDENT WHERE STUDENT_ID = 10561);

/*GUARDIAN*/
SELECT G.GUARDIAN_ID, G.CNIC, G.F_NAME||' '||G.LNAME AS NAME, G.GENDER, G.CONTACT_NO, FROM STUDENT S
INNER JOIN GUARDIAN G ON S.GUARDIAN_ID = G.GUARDIAN_ID
WHERE S.STUDENT_ID = 10561;

/*SIBLINGS*/
SELECT ST2.* FROM STUDENT ST1
INNER JOIN STUDENT ST2 ON ST1.FAMILY_ID = ST2.FAMILY_ID
WHERE ST1.STUDENT_ID <> ST2.STUDENT_ID AND ST1.STUDENT_ID = 10561;

/*CLASS HISTORY*/
SELECT STUDENT_ID, F_NAME||' '||L_NAME AS NAME, CLASS_ID, SECTION_ID AS SECTION
FROM STUDENT_HISTORY
WHERE STUDENT_ID = 10000;




/*-------------------------[#15]*/


/*----------------[[ GET PARENT_IDS THAT MATCH THE CRITERIA ]]--------------------*/

/*SEARCH BY ID*/
SELECT P.PARENT_ID, PE.F_NAME||' '||PE.L_NAME AS NAME, PE.CNIC, PE.CONTACT_NO
FROM PARENT P
INNER JOIN PERSON PE ON P.CNIC = PE.CNIC
WHERE P.PARENT_ID = 1000;

/*SEARCH BY NAME*/
SELECT P.PARENT_ID, PE.F_NAME||' '||PE.L_NAME AS NAME, PE.CNIC, PE.CONTACT_NO
FROM PERSON PE
INNER JOIN PARENT P ON P.CNIC = PE.CNIC
WHERE PE.F_NAME||' '||PE.L_NAME LIKE 'AHMED';


/*----------------[[ ONCE PARENT_IDs ARE AVAILABLE, PRINT ALL INFO OF THEM, THEIR CHILDREN, ETC ]] ----------*/

SELECT S.STUDENT_ID, S.F_NAME||' '||S.L_NAME AS S_NAME, TO_CHAR(S.DOB, 'DD/MM/YYYY') AS DOB, S.CNIC, S.CLASS_ID, S.SECTION_ID, G.GUARDIAN_ID, G.F_NAME||' '||G.L_NAME AS GUARDIAN_NAME, G.GENDER AS GUARDIAN_GENDER
FROM PARENT P
INNER JOIN FAMILY F ON F.MOTHER_ID = P.PARENT_ID OR F.FATHER_ID = P.PARENT_ID
INNER JOIN STUDENT S ON S.FAMILY_ID = F.FAMILY_ID
INNER JOIN GUARDIAN G ON S.GUARDIAN_ID = G.GUARDIAN_ID
WHERE P.PARENT_ID = 1000
ORDER BY S.STUDENT_ID;